#include<stdio.h>
#include<stdlib.h>
#define maxsize 50 

typedef struct binnode{
	char *elem;
	int binlength;

}SeqBitree;

//申请空间 
void InitBitree (SeqBitree *BT){
	BT->elem=(char *)malloc (maxsize *sizeof(char));
	BT->binlength=0;
}

//输入
void InputBitree (SeqBitree *BT){
	printf("请输入二叉树中结点的个数:");
	scanf("%d",&BT->binlength);//缓冲区，接收回车
	getchar();
	printf("请按层次遍历的方式输入二叉树中的节点（空结点用#表示）:");
	int i;
	char ch;
	for(i=1;i<=BT->binlength;i++){
		scanf("%c",&ch);
		if(ch=='#')
		BT->elem[i]='\0';
		else
		BT->elem[i]=ch;
		
		 
	} 
} 

//输出
void outputBitree (SeqBitree *BT){
		printf("按层次遍历输出的二叉树为:");
		int i;
		for(i=1;i<=BT->binlength;i++){
			printf("%c",BT->elem[i]); 
		} 
		printf("\n");
		
} 

//查找
void searchBitree(SeqBitree *BT,char ch){
	int i;
	for(i=1;i<=BT->binlength;i++){		
		if(BT->elem[i]==ch){
			if(i/2==0)printf("该结点是根结点\n");
			else
				printf("该结点的根节点是:%c\n",BT->elem[i/2]);			
			if(BT->elem[2*i]=='\0' || 2*i>BT->binlength)
				printf("该结点没有左孩子!\n");
			else
				printf("该结点的左孩子是:%c\n",BT->elem[2*i]); 
			
			if(BT->elem[2*i+1]=='\0'||2*i+1>BT->binlength)
				printf("该结点没有右孩子!\n");
			else
				printf("该结点的右孩子是:%c\n",BT->elem[2*i+1]); 
		break;
		}
	}
	if(i>BT->binlength)
	 printf("二叉树中不存在这样的结点！\n");
}

//输出叶子结点 
void leafBitree(SeqBitree *BT){
	int i;
	printf("叶子结点是:");
	for(i=1;i<=BT->binlength;i++){
			if((BT->elem[2*i]=='\0'||2*i>BT->binlength)&&(BT->elem[2*i+1]=='\0'||2*i+1>BT->binlength))
			printf("%c",BT->elem[i]); 
	} 
} 

//统计叶子结点个数 
int countleaf(SeqBitree *BT){
	int i,count=0;
	for(i=1;i<=BT->binlength;i++){
	if(BT->elem[i]!='\0' && (BT->elem[2*i]=='\0'&& BT->elem[2*i+1]=='\0')||(BT->elem[i]!='\0' && (2*i>BT->binlength)))
	count++; 
	}
	printf("叶子节点个数为:%d\n",count); 
}


int main(){
		SeqBitree BT;
		int choice;
		char ch; 
		while(1){
				printf("************二叉树基本操作的实现************\n");
				printf("            1.初始化.\n");
				printf("            2.二叉树结点的输入.\n");
				printf("            3.按层次遍历的方式输出二叉树.\n");
				printf("            4.统计二叉树中的叶子结点的个数.\n");
				printf("            5.查找二叉树中的结点.\n");

				printf("            0.退出.\n");
				printf("            请输入你的选择：\n");
				scanf("%d",&choice);
				if(choice==0)break;
				switch(choice){
				case 1:InitBitree(&BT);break;
				case 2:InputBitree(&BT);break; 
				case 3:outputBitree(&BT);break;
				case 4:countleaf(&BT);break;
				case 5:printf("*****现在开始查找******\n");
				printf("请输入你需要查找的元素:");	
				getchar();
				scanf("%c",&ch);
				searchBitree(&BT,ch); 
				break; 
				
				}

		}
		return 0;

}
